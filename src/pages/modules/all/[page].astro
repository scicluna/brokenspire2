---
import type { PaginateFunction } from "astro"
import { products } from "../../../../products/products"
import AllProducts from "../../../components/server/AllProducts.astro"
import Layout from "../../../layouts/Layout.astro"
const range = (n: number) => Array.from(Array(n).keys())

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction
}) {
  return paginate(products, { pageSize: 4 })
}

const { page } = Astro.props
---

<Layout title="Broken Spire Games">
  <section class="h-full w-full flex flex-col items-center min-h-[100dvh]">
    <div class="flex w-full justify-center">
      <h1 class="text-3xl font-extrabold">All Modules</h1>
    </div>
    <AllProducts page={page.currentPage} PRODUCTSPERPAGE={page.size} />
    <div class="flex sm:w-3/4 justify-around p-2">
      <div class="w-full flex justify-start items-start text-xl font-bold">
        {
          page.currentPage !== 1 && (
            <a
              class="hover:text-stone-400 transition-all duration-500"
              href={page.url.prev}>
              Prev
            </a>
          )
        }
      </div>
      <div class="flex gap-2 text-xl font-bold">
        {
          range(Math.ceil(products.length / page.size)).map((_, i) => (
            <a
              href={`/modules/all/${i + 1}`}
              class={`${
                page.currentPage === i + 1
                  ? "text-stone-400"
                  : "text-stone-300 hover:text-stone-400 transition-all duration-500"
              }`}>
              {i + 1}
            </a>
          ))
        }
      </div>
      <div class="w-full flex justify-end items-start text-xl font-bold">
        {
          page.currentPage !== page.lastPage && (
            <a
              class="hover:text-stone-400 transition-all duration-500"
              href={page.url.next}>
              Next
            </a>
          )
        }
      </div>
    </div>
  </section>
</Layout>
